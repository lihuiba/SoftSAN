#!/usr/bin/python
import mds, persistentdb, transientdb, gevent.server, rpc
import logging, config, util, sys, os.path

header="""Meta-Data Server of SoftSAN
Usage: mds-cli [options]
options:"""

cfgstruct = (\
	('address',			'a',	'0.0.0.0',	'IP address to bind'), \
	('port',			'p',	0x6789,		'TCP port to bind'), \
	('rootpath',		'r',	None,		'root path for serving meta data'),\
	('logging-level',	'l',	'info',		'logging level, can be "debug", "info", "warning", "error" or "critical"'), \
	('logging-file',	'f',	'stdout',	'logging appends to this file'),\
	('config',			'c',	'mds.conf',	'config file'),\
	('help',			'h',	False,		'this help'),\
)

try:
	configure,_ = config.config(cfgstruct, 'softsan.conf', 'mds_section')
except:
	pass

if configure['help']==True:
	print header
	config.usage_print(cfgstruct)
	exit(0)

util.setupLogging(configure)
rootpath=configure['rootpath']
assert rootpath, 'the rootpath option must be specified'
assert os.path.exists(rootpath), 'the rootpath "{0}"" must exists'.format(rootpath)
pdb=persistentdb.PersistentDB(rootpath)
tdb=transientdb.TransientDB()
server=mds.MDS(tdb, pdb)
service=rpc.RpcService(server)
endpoint=(configure['address'], int(configure['port']))
framework=gevent.server.StreamServer(endpoint, service.handler)
framework.serve_forever()
